// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  name         String
  password     String
  balance      Float         @default(100000)
  transactions Transaction[]
  orders       Order[]
  portfolios   Portfolio[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Portfolio {
  id            String   @id @default(cuid())
  userId        String
  stockSymbol   String
  stockName     String
  stockPrice    Float
  stockQuantity Float
  stockTotal    Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  user          User     @relation(fields: [userId], references: [id])

  @@unique([userId, stockSymbol]) // Ensure a user can only have one portfolio entry per stock
  @@index([userId]) // Index for faster lookups by user
}

model Transaction {
  id     String @id @default(cuid())
  userId String

  openingBalance Float
  closingBalance Float
  usedBalance    Float
  type           String // 'deposit' or 'withdrawal'

  status    String // 'completed', 'pending', 'failed'
  // currency  String
  createdAt DateTime @default(now())

  order Order? @relation("TransactionToTrade")
  user  User   @relation(fields: [userId], references: [id])
}

model Order {
  id            String      @id @default(cuid())
  userId        String
  transactionId String      @unique
  stockSymbol   String
  stockName     String
  stockPrice    Float
  stockQuantity Float
  stockTotal    Float
  status        String // 'completed', 'pending', 'failed'
  type          String // 'buy' or 'sell'
  description   String?
  createdAt     DateTime    @default(now())
  user          User        @relation(fields: [userId], references: [id])
  transaction   Transaction @relation("TransactionToTrade", fields: [transactionId], references: [id])

  @@index([userId]) // Index for faster lookups by user
  @@index([transactionId]) // Index for faster lookups by transaction
  @@index([stockSymbol]) // Index for faster lookups by stock symbol
}
